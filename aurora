#!/bin/bash
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
MAGENTA='\033[35m'
CYAN='\033[36m'
BOLD='\033[1m'
RESET='\033[0m'
DISPLAY_SCALING=""
CURSOR_SIZE=""
[[ -f ~/.bashrc ]] && source ~/.bashrc
if [ -f "$HOME/opt/flatpak.env" ]; then
    . "$HOME/opt/flatpak.env"
fi
set_display_scaling() {
    local input="$2"
    if [[ "$input" =~ ^[0-9]+([.][0-9]+)?$ ]]; then
        DISPLAY_SCALING=$(printf "%.2f" "$input")

        if (( $(awk "BEGIN {print ($DISPLAY_SCALING < 0.25)}") )); then
            echo "${RED}Warning: DISPLAY_SCALING below 0.25, resetting to 1.0${RESET}"
            DISPLAY_SCALING=1.0
        elif (( $(awk "BEGIN {print ($DISPLAY_SCALING > 4.0)}") )); then
            echo "${RED}Warning: DISPLAY_SCALING above 4.0, resetting to 4.0${RESET}"
            DISPLAY_SCALING=4.0
        fi

        echo "${GREEN}Display scaling set to $DISPLAY_SCALING${RESET}"
        export ELECTRON_FORCE_DEVICE_SCALE_FACTOR=$DISPLAY_SCALING
    else
        echo "${RED}Error: DISPLAY_SCALING must be a number between 0.25 and 4.0 (e.g., 1, 1.5, 2.25)${RESET}"
        return 1
    fi
}

set_cursor_scaling() {
    if ! [[ "$1" =~ ^[0-9]+$ ]]; then
        echo "${RED}Error: Cursor size must be an integer.${RESET}"
        return 1
    fi

    CURSOR_SIZE=$1

    if (( CURSOR_SIZE < 8 )); then
        echo "${YELLOW}Warning: Cursor size below 8, resetting to 8.${RESET}"
        CURSOR_SIZE=8
    elif (( CURSOR_SIZE > 200 )); then
        echo "${YELLOW}Warning: Cursor size above 200, resetting to 200.${RESET}"
        CURSOR_SIZE=200
    fi

    echo "${GREEN}Cursor size set to $CURSOR_SIZE${RESET}"
    export XCURSOR_SIZE=$CURSOR_SIZE
}

show_help() {
    echo "${MAGENTA}"
    echo "Commands with examples:"
    echo "aurora              # initialize flatpak
    echo "aurora display 1.0  # Set display scaling factor (0.25 - 4.0.)"
    echo "aurora cursor 32    # Set cursor size (8 - 200)"
    echo "aurora help         # Show help"
    echo ""
    echo "flatpak --help"
    echo "flatpak search visualstudio"
    echo "flatpak install com.visualstudio.code"
    echo "flatpak --command=sh com.visualstudio.code"
    echo "/app/bin/code --no-sandbox --no-zygote --disable-gpu-sandbox --disable-features=UsePortal"
    echo "${RESET}"
   
}


case "$1" in
    display)
        set_display_scaling "$2"
        ;;
    cursor)   
        ;;
   --h|-h|h|--help|-help|help)
        show_help
        ;;
    ""|status)
        export PATH="$HOME/opt/flatpak/usr/bin:$PATH"
        export LD_LIBRARY_PATH="$HOME/opt/flatpak-deps/usr/lib:$LD_LIBRARY_PATH"
        export PATH="$HOME/opt/flatpak-deps/usr/bin:$PATH"
        TMPDIR=$HOME/tmp 
        export PATH="$HOME:$PATH"
        export TMPDIR="$HOME/tmp"
        export DISPLAY=:0
        export XDG_RUNTIME_DIR="$HOME/.xdg-runtime-dir"
        mkdir -p "$XDG_RUNTIME_DIR"
        chmod 700 "$XDG_RUNTIME_DIR"
        sleep 1
        if [ ! -f "$XDG_RUNTIME_DIR/dbus-session.address" ]; then
          dbus-daemon --session \
            --address="unix:path=$XDG_RUNTIME_DIR/dbus-session" \
            --print-address=1 \
            --nopidfile \
            --nofork > "$XDG_RUNTIME_DIR/dbus-session.address" &
          sleep 1
        fi
        export DBUS_SESSION_BUS_ADDRESS=$(cat "$XDG_RUNTIME_DIR/dbus-session.address")
        echo "$DBUS_SESSION_BUS_ADDRESS"
        chmod 700 "$XDG_RUNTIME_DIR"
        sleep 1
        mkdir -p "$XDG_RUNTIME_DIR/doc"
        mkdir -p "$XDG_RUNTIME_DIR/doc/portal"
        chmod 700 "$XDG_RUNTIME_DIR/doc"
        chmod 700 "$XDG_RUNTIME_DIR/doc/portal"
        echo 3 > "$XDG_RUNTIME_DIR/doc/portal/version"
        export XDG_DATA_DIRS="/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share:/usr/local/share:/usr/share"
        sleep 1
        export GTK_USE_PORTAL=0
        export FLATPAK_DISABLE_PORTAL=1
        if ! dbus-send --session --dest=org.freedesktop.DBus --type=method_call \
             --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames > /dev/null 2>&1; then
            eval "$(dbus-launch --sh-syntax)"
            export DBUS_SESSION_BUS_ADDRESS
        fi
        sleep 1
        mkdir -p ~/tmp
        mkdir -p $HOME/tmp
        TMPDIR=$HOME/tmp
        export TMPDIR="$HOME/tmp"
        chown -R $USER:$USER ~/.local/share/flatpak
        chmod -R u+rw ~/.local/share/flatpak

        if [[ -z "$ELECTRON_FORCE_DEVICE_SCALE_FACTOR" && -z "$XCURSOR_SIZE" ]]; then
            echo "${BLUE}ELECTRON_FORCE_DEVICE_SCALE_FACTOR: Not yet applied. Not an error.${RESET}"
        else
            [[ -n "$ELECTRON_FORCE_DEVICE_SCALE_FACTOR" ]] && \
                echo "${MAGENTA}ELECTRON_FORCE_DEVICE_SCALE_FACTOR = $ELECTRON_FORCE_DEVICE_SCALE_FACTOR${RESET}" || \
                echo "${YELLOW}ELECTRON_FORCE_DEVICE_SCALE_FACTOR not yet applied${RESET}"

            [[ -n "$XCURSOR_SIZE" ]] && \
                echo "${MAGENTA}XCURSOR_SIZE = $XCURSOR_SIZE${RESET}" || \
                echo "${BLUE}XCURSOR_SIZE not yet applied. Not an error.${RESET}"
        fi
        
        ;;

    *)
            echo "${RED}Unknown command $1 ${RESET}"
            show_help
            exit 1
        ;;
esac
